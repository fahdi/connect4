{"version":3,"sources":["domEvents.js"],"names":[],"mappings":";;AAAA,EAAE,QAAF,EAAY,KAAZ,CAAkB,YAAY;AAC1B,QAAI;AACA,YAAI,EAAE,cAAF,EAAkB,MAAlB,EAA0B;;AAE1B,gBAAI,YAAY,EAAE,cAAF,CAAZ,CAFsB;;AAI1B,gBAAI,UAAU,UAAU,IAAV,CAAe,MAAf,CAAV,CAJsB;AAK1B,gBAAI,UAAU,UAAU,IAAV,CAAe,MAAf,CAAV,CALsB;;AAO1B,gBAAI,MAAM,OAAN,KAAkB,MAAM,OAAN,CAAlB,EAAkC;AAClC,sBAAM,IAAI,KAAJ,CAAU,iDAAV,CAAN,CADkC;aAAtC;;AAIA,gBAAI,cAAc,UAAU,IAAV,CAAe,SAAf,CAAd,CAXsB;AAY1B,gBAAI,eAAe,UAAU,IAAV,CAAe,SAAf,CAAf;;;;AAZsB,gBAgBtB,gBAAgB,SAAhB,IAA6B,iBAAiB,SAAjB,EAA4B;AACzD,sBAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN,CADyD;aAA7D;;;AAhB0B,gBAqBtB,cAAc,IAAI,WAAJ,CAAgB,OAAhB,EAAyB,OAAzB,EAAkC,WAAlC,EAA+C,YAA/C,CAAd;;;;AArBsB,gBAyBtB,gBAAgB,EAAE,oBAAF,CAAhB,CAzBsB;AA0B1B,gBAAI,iBAAiB,EAAE,uBAAF,CAAjB;;;;;AA1BsB,gBA+BtB,cAAc,MAAd,KAAyB,CAAzB,IAA8B,eAAe,MAAf,KAA0B,CAA1B,EAA6B;AAC3D,sBAAM,IAAI,KAAJ,CAAU,oEAAV,CAAN,CAD2D;aAA/D;;;AA/B0B,gBAoCtB,gBAAgB,IAAI,aAAJ,CAAkB,aAAlB,EAAiC,cAAjC,EAAgD,SAAhD,CAAhB;;;;;;AApCsB,yBA0C1B,CAAc,SAAd;;;AA1C0B,aA6C1B,CAAE,cAAF,EAAkB,KAAlB,CAAwB,UAAU,KAAV,EAAiB;;AAErC,8BAAc,YAAd;;;AAFqC,oBAKjC,SAAS,EAAE,MAAM,MAAN,CAAX;;;AALiC,oBAQjC,gBAAgB,OAAO,IAAP,CAAY,KAAZ,CAAhB;;;;;;AARiC,oBAcjC,kBAAkB,SAAlB,EAA6B;AAC7B,6BAAS,OAAO,MAAP,EAAT;AAD6B,iCAE7B,GAAgB,OAAO,IAAP,CAAY,KAAZ,CAAhB,CAF6B;iBAAjC;;AAKA,gCAAgB,SAAS,aAAT,EAAwB,EAAxB,CAAhB;;;;;;;;;AAnBqC,oBA4BjC,WAAW,YAAY,eAAZ,CAA4B,aAA5B,CAAX,CA5BiC;;AA8BrC,oBAAI,YAAY,QAAZ,CAAqB,aAArB,MAAwC,IAAxC,EAA8C;;;;AAI9C,kCAAc,QAAd,CAAuB,QAAvB,EAAiC,aAAjC;;;AAJ8C,wBAO1C,YAAY,KAAZ,CAAkB,QAAlB,EAA4B,aAA5B,CAAJ,EAAgD;;AAE5C,sCAAc,cAAd,GAF4C;AAG5C,sCAAc,SAAd,GAH4C;qBAAhD,MAIO;;AAEH,oCAAY,YAAZ;;AAFG,qCAIH,CAAc,YAAd,GAJG;qBAJP;iBAPJ,MAkBO;;;AAGH,kCAAc,qBAAd,GAHG;iBAlBP;aA9BoB,CAAxB,CA7C0B;SAA9B,MAqGO;AACH,kBAAM,IAAI,KAAJ,CAAU,kFAAV,CAAN,CADG;SArGP;KADJ,CAyGE,OAAO,GAAP,EAAY;AACV,gBAAQ,KAAR,CAAc,IAAI,OAAJ,CAAd,CADU;KAAZ;AAGF,WAAO,KAAP,CA7G0B;CAAZ,CAAlB","file":"domEvents-compiled.js","sourcesContent":["$(document).ready(function () {\n    try {\n        if ($('.connectfour').length) {\n\n            var htmlBoard = $('.connectfour');\n\n            var numRows = htmlBoard.data('rows');\n            var numCols = htmlBoard.data('cols');\n\n            if (isNaN(numRows) || isNaN(numCols)) {\n                throw new Error(\"data-rows or data-cols not defined in Jade/HTML\");\n            }\n\n            var firstPlayer = htmlBoard.data('player1');\n            var secondPlayer = htmlBoard.data('player2');\n\n            //console.log(firstPlayer, secondPlayer);\n\n            if (firstPlayer === undefined || secondPlayer === undefined) {\n                throw new Error(\"data-player1 or data-player2 not defined in Jade/HTML\");\n            }\n\n            // Create core math model object\n            var connectFour = new ConnectFour(numRows, numCols, firstPlayer, secondPlayer);\n\n            // UI elements for first and second player in DOM\n\n            var uiFirstPlayer = $('.players .slot-red');\n            var uiSecondPlayer = $('.players .slot-yellow');\n\n            // Check if it worked\n            //console.log(uiFirstPlayer, uiSecondPlayer);\n\n            if (uiFirstPlayer.length === 0 || uiSecondPlayer.length === 0) {\n                throw new Error(\"Divs with slot-red or slot-yellow classes not defined in Jade/HTML\");\n            }\n\n            // Create UI object that changes UI stuff based on math\n            var connectFourUI = new ConnectFourUI(uiFirstPlayer, uiSecondPlayer,htmlBoard);\n\n            // Check if it worked\n            //console.log(connectFourUI);\n\n            // Show basic help message in start for UX\n            connectFourUI.showIntro();\n\n            // In case anywhere on the board is clicked\n            $('.connectfour').click(function (event) {\n\n                connectFourUI.cleanMessage();\n\n                // get the target div or element\n                var target = $(event.target);\n\n                // get column number for data attribute\n                var currentColumn = target.data('col');\n\n                /*\n                 * if a child slot is clicked, get data attribute for column from the respective parent\n                 * div slot-container\n                 */\n                if (currentColumn === undefined) {\n                    target = target.parent(); // slot-container in case slot was clicked\n                    currentColumn = target.data('col');\n                }\n\n                currentColumn = parseInt(currentColumn, 10); // be on the safe side\n\n                /*console.log(\"Rows =\", connectFour.rows,\n                    \" Cols =\", connectFour.cols,\n                    \" Clicked col =\", currentColumn,\n                    \" Empty row =\", connectFour.getEmptySlotRow(currentColumn)\n                );*/\n\n                // get the empty row for the target column\n                var emptyRow = connectFour.getEmptySlotRow(currentColumn);\n\n                if (connectFour.dropDisk(currentColumn) === true) {\n                    // check if the last move was the winning one for the current player\n\n                    // update UI for dropDisk on successful maths model update\n                    connectFourUI.dropDisk(emptyRow, currentColumn);\n\n                    // Check if the current player won\n                    if (connectFour.isWon(emptyRow, currentColumn)) {\n                        //console.log(\"I love winning\");\n                        connectFourUI.drawWonMessage();\n                        connectFourUI.disableUI();\n                    } else {\n                        //switch players in core model\n                        connectFour.switchPlayer();\n                        // switch players in UI\n                        connectFourUI.switchPlayer();\n                    }\n\n                } else {\n\n                    // if column is filled, show respective UI message\n                    connectFourUI.showColumnFillMessage();\n                }\n\n            });\n\n        } else {\n            throw new Error(\"The HTML page doesn't have the right section with class .connectfour to link to.\");\n        }\n    } catch (err) {\n        console.error(err.message);\n    }\n    return false;\n});\n"]}